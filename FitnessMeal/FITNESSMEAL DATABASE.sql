DROP TABLE [ORDER_ITEM];
DROP TABLE [ORDER_MEAL];
DROP TABLE [PICK_UP];
DROP TABLE [MEAL_ITEMS];
DROP TABLE [MEAL];
DROP TABLE [FOOD_ITEM];
DROP TABLE [RESERVATION];
DROP TABLE [RESTAURANT];
DROP TABLE [USER];

Create table [dbo].[USER] (
[USER_ID] nvarchar(128) NOT NULL UNIQUE,
[USERNAME] nvarchar(20) NOT NULL,
[EMAIL] nvarchar(max) NOT NULL,
[DOB] DATE,
[DESCRIPTION] nvarchar(max),
[User_Type] nvarchar(20),
CHECK (User_Type in ('fitness_user','restaurant_owner')),
PRIMARY KEY (USER_ID)
);
GO

Create table [dbo].[Restaurant] (
[RESTAURANT_ID] nvarchar(20) NOT NULL UNIQUE,
[RESTAURANT_NAME] nvarchar(max) NOT NULL,
[DESCRIPTION] nvarchar(max),
[Main_CUSINE] nvarchar(20) NOT NULL,
[USER_ID] nvarchar(128) NOT NULL,
[ADRESS_FIRST_LINE] nvarchar(max) NOT NULL,
[STREET_NO] nvarchar(10) NOT NULL,
[STREET/RD] nvarchar(50) NOT NULL,
[SURBURB] nvarchar(50) NOT NULL,
[POSTCODE] numeric(10) NOT NULL,
[STATE] nvarchar(10) NOT NULL,
PRIMARY KEY (RESTAURANT_ID),
FOREIGN KEY (USER_ID) REFERENCES [USER](USER_ID)
);
GO

CREATE TABLE [DBO].[RESERVATION](
[RESERVATION_ID] nvarchar(20) NOT NULL UNIQUE,
[USER_ID] nvarchar(128) NOT NULL,
[RESTAURANT_ID] nvarchar(20) NOT NULL,
[CREATE_TIME] DATETIME NOT NULL,
[RESERVE_TIME] DATETIME NOT NULL,
[NO_OF_PEOPLE] NUMERIC(5) NOT NULL,
[TABLE_NO] NVARCHAR(10),
[STATE] NVARCHAR(10),
[REMARKS] NVARCHAR(MAX),
CHECK (STATE IN ('waiting','confirmed','refused','close')),
PRIMARY KEY (RESERVATION_ID),
FOREIGN KEY (USER_ID) REFERENCES [USER](USER_ID),
FOREIGN KEY (RESTAURANT_ID) REFERENCES [RESTAURANT](RESTAURANT_ID)
);
GO

CREATE TABLE [DBO].[FOOD_ITEM](
[ITEM_ID] NVARCHAR(20) NOT NULL UNIQUE,
[RESTAURANT_ID] nvarchar(20) NOT NULL,
[ITEM_NAME] NVARCHAR(20) NOT NULL,
[DESCRIPTION] NVARCHAR(MAX) NOT NULL,
[CUISINE] NVARCHAR(20) NOT NULL,
[ENERGY] NUMERIC(10) NOT NULL,
[PRICE] NUMERIC(10,2) NOT NULL,
[IS_DRINK] VARCHAR(2) NOT NULL CHECK ( IS_DRINK IN ('Y','N')),
[IS_PURE_VEGI] VARCHAR(2) NOT NULL CHECK ( IS_PURE_VEGI IN ('Y','N')),
[HAS_BEEF] VARCHAR(2) NOT NULL CHECK (HAS_BEEF IN ('Y','N')),
[HAS_PORK] VARCHAR(2) NOT NULL CHECK (HAS_PORK IN ('Y','N')),
[HAS_OTHERMEAT] VARCHAR(2) NOT NULL CHECK (HAS_OTHERMEAT IN ('Y','N')),
[HAS_CHICKEN] VARCHAR(2) NOT NULL CHECK (HAS_CHICKEN IN ('Y','N')),
[HAS_EGG] VARCHAR(2) NOT NULL CHECK (HAS_EGG IN ('Y','N')),
[HAS_MILK] VARCHAR(2) NOT NULL CHECK (HAS_MILK IN ('Y','N')),
[HAS_NUTS] VARCHAR(2) NOT NULL CHECK (HAS_NUTS IN ('Y','N')),
[HAS_VEGI] VARCHAR(2) NOT NULL  CHECK (HAS_VEGI IN ('Y','N')),
[HAS_FRUIT] VARCHAR(2) NOT NULL  CHECK (HAS_FRUIT IN ('Y','N')),
[HAS_RICE] VARCHAR(2) NOT NULL CHECK (HAS_RICE IN ('Y','N')),
PRIMARY KEY(ITEM_ID),
FOREIGN KEY(RESTAURANT_ID) REFERENCES [RESTAURANT](RESTAURANT_ID)
);
GO

CREATE TABLE [DBO].[MEAL](
[MEAL_ID] nvarchar(20) NOT NULL UNIQUE,
[TOTAL_PRICE] numeric(10,2) NOT NULL,
[TOTAL_ENERGY] NUMERIC(10) NOT NULL,
[DISCOUNT] NUMERIC(3,2) CHECK(DISCOUNT<=1)
PRIMARY KEY(MEAL_ID)
);
GO

CREATE TABLE [DBO].[MEAL_ITEMS](
[MEAL_ID] NVARCHAR(20) NOT NULL,
[ITEM_ID] NVARCHAR(20) NOT NULL
PRIMARY KEY(MEAL_ID,ITEM_ID),
FOREIGN KEY(MEAL_ID) REFERENCES [MEAL](MEAL_ID),
FOREIGN KEY(ITEM_ID) REFERENCES [FOOD_ITEM](ITEM_ID)
);
GO

CREATE TABLE [DBO].[PICK_UP](
[ORDER_ID] NVARCHAR(20) NOT NULL UNIQUE,
[USER_ID] NVARCHAR(128) NOT NULL,
[RESTAURANT_ID] NVARCHAR(20) NOT NULL,
[ORDER_TIME] DATETIME NOT NULL,
[PICK_UP_TIME] DATETIME NOT NULL,
[ORDER_PRICE] NUMERIC(10,2) NOT NULL,
[NO_OF_EATER] NUMERIC(2),
[TOTAL_ENERGY] NUMERIC(10) NOT NULL,
[STATE] NVARCHAR(20) CHECK(STATE IN ('waiting','confirmed','refused','ready','close')),
[REMARKS] NVARCHAR(MAX),
PRIMARY KEY(ORDER_ID),
FOREIGN KEY(USER_ID) REFERENCES [USER](USER_ID),
FOREIGN KEY(RESTAURANT_ID) REFERENCES [RESTAURANT](RESTAURANT_ID)
);
GO

CREATE TABLE [DBO].[ORDER_ITEM](
[ORDER_ID] NVARCHAR(20) NOT NULL,
[ITEM_ID] NVARCHAR(20) NOT NULL,
[QUANTITY] NUMERIC(2) NOT NULL,
[TOTAL_PRICE] NUMERIC(10) NOT NULL,
[TOTAL_ENERGY] NUMERIC(10) NOT NULL,
PRIMARY KEY(ORDER_ID, ITEM_ID),
FOREIGN KEY(ORDER_ID) REFERENCES [PICK_UP](ORDER_ID),
FOREIGN KEY(ITEM_ID) REFERENCES [FOOD_ITEM](ITEM_ID)
);
GO

CREATE TABLE [DBO].[ORDER_MEAL](
[ORDER_ID] NVARCHAR(20) NOT NULL,
[MEAL_ID] NVARCHAR(20) NOT NULL,
[QUANTITY] NUMERIC(2) NOT NULL,
[TOTAL_PRICE] NUMERIC(10,2) NOT NULL,
[TOTAL_ENERGY] NUMERIC(10) NOT NULL,
PRIMARY KEY(ORDER_ID,MEAL_ID),
FOREIGN KEY(ORDER_ID) REFERENCES [PICK_UP](ORDER_ID),
FOREIGN KEY(MEAL_ID) REFERENCES [MEAL](MEAL_ID)
);
GO

CREATE TABLE [DBO].[TEST](
[NUMBER] NUMERIC(4,2) NOT NULL UNIQUE
);

INSERT INTO TEST VALUES(11.20);

Alter table DBO.Restaurant add [latitude] numeric(10,6);
Alter table DBO.Restaurant add [longitude]  numeric(10,6);
ALTER TABLE DBO.Restaurant
ALTER COLUMN ADRESS_FIRST_LINE nvarchar(max);
exec sp_rename 'DBO.PICK_UP', 'RESERVE_PICK_UP';

CREATE TABLE [DBO].[MAIN_CUSINE](
[CUSINE] NVARCHAR(20) NOT NULL UNIQUE,
PRIMARY KEY (CUSINE)
);

ALTER TABLE DBO.Restaurant ADD FOREIGN KEY(MAIN_CUSINE) REFERENCES DBO.MAIN_CUSINE(CUSINE);

exec sp_rename 'DBO.MAIN_CUSINE', 'CUSINES';

ALTER TABLE DBO.Restaurant DROP Column Main_CUSINE;   

ALTER TABLE DBO.CUSINES
ALTER COLUMN CUSINE nvarchar(max);


Go

ALTER TABLE DBO.MEAL ADD RESTAURANT_ID int;
ALTER TABLE DBO.MEAL ADD FOREIGN KEY(RESTAURANT_ID) REFERENCES DBO.RESTAURANT(RESTAURANT_ID);
Go

ALTER TABLE DBO.MEAL ADD [MEAL_NAME] NVARCHAR(20);
ALTER TABLE DBO.MEAL ADD [DESCRIPTION] NVARCHAR(MAX);
go

ALTER TABLE DBO.MEAL_ITEMS ADD [Quantity] int;
go

ALTER TABLE DBO.Restaurant ADD SCORE int;
ALTER TABLE DBO.Restaurant ADD DISTANCE INT;
GO
